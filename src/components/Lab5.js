//import './Lab5.css';
import {useCallback, useEffect, useState} from "react";

export default function Lab5() {
    const [students, setStudents] = useState([
        {name: '–ë–∞—Ä–∞–±–æ–ª—è –í.', sex: false, status: '–ë–æ—Ç–∞–Ωü§ì', mark: 5},
        {name: '–ë–∞—à–ª—ñ–π –ê.', sex: false, status: '–ì–∞–ª—å–æ—Ä–∫–∞üëë', mark: 2},
        {name: '–ë–µ—Ä–µ–±–µ–ª—é—Ö –Æ.', sex: true, status: '–î–ï–ù–°üíÉ', mark: 4},
        {name: '–ë—ñ–ª–∏–∫ –ê.', sex: true, status: '–î–ï–ù–°üíÉ', mark: 2},
        {name: '–ë–æ—Ä—Ç–Ω–∏–∫ –í.', sex: false, status: '–ì–∞–ª—å–æ—Ä–∫–∞üëë', mark: 2},
        {name: '–ì—É—Ä–Ω–∏–π –†.', sex: false, status: '–ë–æ—Ç–∞–Ωü§ì', mark: 4},
        {name: '–ó–µ–π–ª–∏–∫ –†.', sex: false, status: '–ë–æ—Ç–∞–Ωü§ì', mark: 5},
        {name: '–ö—Ä–∞–≤—á—É–∫ –Ü.', sex: false, status: '–ë–æ—Ç–∞–Ωü§ì', mark: 5},
        {name: '–ö—É–ª–∞—á—É–∫ –ú.', sex: true, status: '–®–∞–ø—ñ—Ç–æ–≤–∫–∞‚öΩ', mark: 4},
        {name: '–ö—É–ª–∞—á—É–∫ –û.', sex: true, status: '–®–∞–ø—ñ—Ç–æ–≤–∫–∞‚öΩ', mark: 4},
        {name: '–ú–∏—Ö–∞–π–ª–æ–≤—Å—å–∫–∏–π –Ü.', sex: false, status: '–ì–∞–ª—å–æ—Ä–∫–∞üëë', mark: 2},
        {name: '–ú—É—à—Ç–∏–Ω –û.', sex: false, status: '–®–∞–ø—ñ—Ç–æ–≤–∫–∞‚öΩ', mark: 4},
        {name: '–ü–ª—è—Ü–∏–∫ –û.', sex: false, status: '–ë–æ—Ç–∞–Ωü§ì', mark: 4},
        {name: '–†—ñ–¥–∫–æ–¥—É–±—Å—å–∫–∞ –û.', sex: true, status: '–ö-–ü–û–üüé§', mark: 2},
        {name: '–°–æ–±—á—É–∫ –ê.', sex: false, status: '!–ó–û–ñüèã', mark: 2},
        {name: '–§–∞—Å—É–ª—è–∫ –î.', sex: false, status: '–ë–æ—Ç–∞–Ωü§ì', mark: 4},
        {name: '–•–ª–æ–ø–æ—Ç –ê.', sex: false, status: '–ì–∞–ª—å–æ—Ä–∫–∞üëë', mark: 2},
        {name: '–•—É—Ä—à—É–¥—è–Ω –ê.', sex: true, status: '–í –º–µ–Ω–µ –ª–∞–ø–∫–∏üë∫', mark: 2},
        {name: '–¶–∞–ø–∏–∫ –Ñ.', sex: true, status: '–ë–æ—Ç–∞–Ωü§ì', mark: 5},
        {name: '–¶–µ–≥–µ–ª—å–Ω–∏–∫ –û.', sex: false, status: '–ë–æ—Ç–∞–Ωü§ì', mark: 5},
        {name: '–®–∏–º–∫—ñ–≤ –ú.', sex: false, status: '–ì–∞–ª—å–æ—Ä–∫–∞üëë', mark: 2},
        {name: '–Ø—Ä–æ—Ü—å–∫–∞ –ê.', sex: true, status: '!–ó–û–ñüèã', mark: 2},
    ]);
    const [vs, setVs] = useState([{
        name: 'sex', f: () => {
            return {'–ö–æ—Ä–æ–ª–µ–≤–∞üë∏':students.filter((el) => el.sex), '–ü—ñ–≤–µ–Ω—åüêì':students.filter((el) => !el.sex)}
        }
    }, {
        name: 'status', f: () => {
            const arrays = {};
            students.forEach((el) => {
                if (arrays[el.status]) {
                    arrays[el.status].push(el);
                } else {
                    arrays[el.status] = [el];
                }
            })
            return arrays;
        }
    }, {
        name: 'mark', f: () => {
            const arrays = {};
            students.forEach((el) => {
                if (arrays[el.mark]) {
                    arrays[el.mark].push(el);
                } else {
                    arrays[el.mark] = [el];
                }
            });
            return arrays;
        }
    }
    ]);
    const [v, setV] = useState(vs[0]);

    const [vStudents, setVStudents] = useState(v.f());

    const vCheck = useCallback((el1, el2) => {
        let result = 0;
        Object.entries(vStudents).forEach(([key, arr]) => {
            if (arr.filter((el) => el.name === el1.name).length && arr.filter((el) => el.name === el2.name).length) {
                result = key;
                return result;
            }
        })
        return result;
    }, [v, vStudents]);
    const getColor = useCallback((index)=>{
        switch (index) {
            case '–ö–æ—Ä–æ–ª–µ–≤–∞üë∏': return 'lightpink';
            case '–ü—ñ–≤–µ–Ω—åüêì': return 'lightblue';
            case '2': return 'darksalmon';
            case '3': return 'lightcoral';
            case '4': return 'lightblue';
            case '5': return 'lightgreen';
            case '–ë–æ—Ç–∞–Ωü§ì': return 'lightgreen';
            case '–ì–∞–ª—å–æ—Ä–∫–∞üëë': return 'violet';
            case '–í –º–µ–Ω–µ –ª–∞–ø–∫–∏üë∫': return 'gold';
            case '–®–∞–ø—ñ—Ç–æ–≤–∫–∞‚öΩ': return 'lightblue';
            case '!–ó–û–ñüèã': return 'bisque';
            case '–ö-–ü–û–üüé§': return 'aquamarine';
            case '–î–ï–ù–°üíÉ': return 'lightcoral';
            default: return 'white';
        }
    },[]);

    useEffect(()=>{
        setVStudents(v.f());
    },[v])

    return (
        <div className="Lab5">
            <h1>–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞ —Ä–æ–±–æ—Ç–∞ ‚Ññ5</h1>
            <p>–ó–∞–¥–∞–π—Ç–µ —Ç—Ä–∏ –≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –µ–∫–≤—ñ–≤–∞–ª–µ–Ω—Ç–Ω–æ—Å—Ç—ñ –Ω–∞ –º–Ω–æ–∂–∏–Ω—ñ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –≤–∞—à–æ—ó –∞–∫–∞–¥–µ–º—ñ—á–Ω–æ—ó –≥—Ä—É–ø–∏. –í–∏–∑–Ω–∞—á—Ç–µ –∫–ª–∞—Å–∏
                –µ–∫–≤—ñ–≤–∞–ª–µ–Ω—Ç–Ω–æ—Å—Ç—ñ –¥–ª—è —Ü–∏—Ö –≤—ñ–¥–Ω–æ—à–µ–Ω—å –µ–∫–≤—ñ–≤–∞–ª–µ–Ω—Ç–Ω–æ—Å—Ç—ñ. –ü–æ–±—É–¥—É–π—Ç–µ –≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è —É –≤–∏–≥–ª—è–¥—ñ —Ç–∞–±–ª–∏—Ü—ñ</p>
            <select value={v.name} onChange={(e) => {
                setV(vs.find((el)=>
                    el.name === e.target.value));
            }}>
                <option value="sex">–†–æ–∑–±–∏—Ç—Ç—è –Ω–∞ –≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ—Å–Ω–æ —Å—Ç–∞—Ç—ñ</option>
                <option value="status">–†–æ–∑–±–∏—Ç—Ç—è –Ω–∞ –≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ—Å–Ω–æ —Å—Ç–∞—Ç—É—Å—É</option>
                <option value="mark">–†–æ–∑–±–∏—Ç—Ç—è –Ω–∞ –≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ—Å–Ω–æ –æ—Ü—ñ–Ω–æ–∫</option>
            </select>
            <div className="Lab5_result">
                <table>
                    <thead>
                    <th key=''/>
                    {students.map((el) => <th key={el.name}>{el.name}</th>)}
                    </thead>
                    <tbody>
                    {students.map((el) => <tr key={el.name}>
                        <td>{el.name}</td>
                        {students.map((col) =>{
                            const i = vCheck(el, col);
                            return <td bgcolor={getColor(i)}>{i}</td>
                        })}
                    </tr>)}
                    </tbody>
                </table>
            </div>
        </div>
    );
}

